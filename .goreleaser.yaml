# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    - go mod tidy
universal_binaries:
  - id: envd
    replace: false
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    id: envd
    main: ./cmd/envd
    binary: envd
    ldflags:
      - -s -w
      - -X github.com/tensorchord/envd/pkg/version.version={{ .Version }}
      - -X github.com/tensorchord/envd/pkg/version.buildDate={{ .Date }}
      - -X github.com/tensorchord/envd/pkg/version.gitCommit={{ .Commit }}
      - -X github.com/tensorchord/envd/pkg/version.gitTreeState=clean
      - -X github.com/tensorchord/envd/pkg/version.gitTag={{ .Tag }}
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    id: envd-sshd
    main: ./cmd/envd-sshd
    binary: envd-sshd
    ldflags:
      - -s -w
      - -X github.com/tensorchord/envd/pkg/version.version={{ .Version }}
      - -X github.com/tensorchord/envd/pkg/version.buildDate={{ .Date }}
      - -X github.com/tensorchord/envd/pkg/version.gitCommit={{ .Commit }}
      - -X github.com/tensorchord/envd/pkg/version.gitTreeState=clean
archives:
  - id: envd
    format: binary
    builds:
      - envd
    name_template: >-
      {{ .Binary }}_{{ .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
  - id: envd-sshd
    format: binary
    builds:
      - envd-sshd
    name_template: >-
      {{ .Binary }}_{{ .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  use: github
  sort: asc
  groups:
    - title: 'Exciting New Features üéâ'
      regexp: "^.*feat.*"
      order: 0
    - title: 'Bug Fix üõ†'
      regexp: "^.*(Fix|fix|bug).*"
      order: 1
    - title: 'Refactor üèóÔ∏è'
      regexp: "^.*refact.*"
      order: 2
    - title: 'Documentation üñäÔ∏è'
      regexp: "^.*docs.*"
      order: 3
    - title: 'Others:'
      order: 999
dockers:
- image_templates:
  - "tensorchord/envd-from-scratch:v{{ .Version }}-amd64"
  use: buildx
  dockerfile: base-images/envd/envd.Dockerfile
  ids:
  - envd
  build_flag_templates:
  - "--platform=linux/amd64"
- image_templates:
  - "tensorchord/envd-from-scratch:v{{ .Version }}-arm64v8"
  use: buildx
  goarch: arm64
  ids:
  - envd
  dockerfile: base-images/envd/envd.Dockerfile
  build_flag_templates:
  - "--platform=linux/arm64/v8"
- image_templates:
  - "tensorchord/envd-sshd-from-scratch:v{{ .Version }}-amd64"
  use: buildx
  dockerfile: base-images/envd-sshd/envd-sshd.Dockerfile
  ids:
  - envd-sshd
  build_flag_templates:
  - "--platform=linux/amd64"
- image_templates:
  - "tensorchord/envd-sshd-from-scratch:v{{ .Version }}-arm64v8"
  use: buildx
  goarch: arm64
  ids:
  - envd-sshd
  dockerfile: base-images/envd-sshd/envd-sshd.Dockerfile
  build_flag_templates:
  - "--platform=linux/arm64/v8"
docker_manifests:
- name_template: tensorchord/envd-sshd-from-scratch:v{{ .Version }}
  image_templates:
  - tensorchord/envd-sshd-from-scratch:v{{ .Version }}-amd64
  - tensorchord/envd-sshd-from-scratch:v{{ .Version }}-arm64v8
- name_template: tensorchord/envd-from-scratch:v{{ .Version }}
  image_templates:
  - tensorchord/envd-from-scratch:v{{ .Version }}-amd64
  - tensorchord/envd-from-scratch:v{{ .Version }}-arm64v8
