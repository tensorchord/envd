name: continuous-integration

on:
  - push
  - pull_request

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: actions/checkout@v3
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Check Go modules
        run: |
          -compat=1.17 && git add go.*
          git diff --cached --exit-code || (echo 'Please run "go mod tidy" to sync Go modules' && exit 1);
      - name: Verify gofmt
        run: |
          make fmt && git add pkg cmd
          git diff --cached --exit-code || (echo 'Please run "make fmt" to verify gofmt' && exit 1);
      - name: Verify govet
        run: |
          make vet && git add pkg cmd
          git diff --cached --exit-code || (echo 'Please run "make vet" to verify govet' && exit 1);
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29
  test:
    name: test
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/tensorchord/MIDI
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/tensorchord/MIDI
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Verify mockgen
        run: |
          make generate && git add pkg
          git diff --cached --exit-code || (echo 'Please run "make generate" to verify generate' && exit 1);
      - name: Test
        run: make test
      # - name: send coverage
      #   uses: shogo82148/actions-goveralls@v1
      #   with:
      #     path-to-profile: coverage.out
      #     working-directory: src/github.com/tensorchord/MIDI
      #     flag-name: unit-test
      #     parallel: true
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/tensorchord/MIDI

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/tensorchord/MIDI
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: make
