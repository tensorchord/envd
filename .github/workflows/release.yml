name: release

on:
  push:
    tags:
      - '*'
  pull_request:
    paths:
    - '.github/workflows/release.yml'
    - '.goreleaser/'
    - '.goreleaser.yaml'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}    
      - name: upload gobin
        uses: actions/upload-artifact@v3
        with:
          name: gobin_${{ github.event.release.tag_name }}
          retention-days: 1
          path: |
            dist/envd_linux_amd64_v1/envd
            dist/envd_darwin_amd64_v1/envd
          if-no-files-found: error
  pypi_publish:
    needs: goreleaser
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
    if: startsWith(github.ref, 'refs/tags/v') # only trigger when tag starts with v
    steps:    
    - uses: actions/checkout@v3
    - name: Get gobin
      uses: actions/download-artifact@v3
      with:
        name: gobin_${{ github.event.release.tag_name }}
        path: dist/    
    - name: Configure linux build environment
      if: runner.os == 'Linux'
      run: |
        mkdir -p bin
        mv dist/envd_linux_amd64_v1/envd bin/envd
        chmod +x bin/envd
    - name: Configure macOS build environment
      if: runner.os == 'macOS'
      run: |
        mkdir -p bin
        mv dist/envd_darwin_amd64_v1/envd bin/envd
        chmod +x bin/envd
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.6.1
      env:
        CIBW_ARCHS: auto64
    - name: Upload to PyPI    
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload wheelhouse/*
