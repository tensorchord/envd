name: release

on:
  push:
    tags:
      - '*'
  pull_request:
    paths:
    - '.github/workflows/release.yml'
    - '.goreleaser/'
    - '.goreleaser.yaml'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}    
      - name: upload gobin
        uses: actions/upload-artifact@v3
        with:
          name: gobin_${{ github.event.release.tag_name }}
          retention-days: 1
          path: |
            dist/envd_linux_amd64_v1/envd
            dist/envd-ssh_linux_amd64_v1/envd-ssh
          if-no-files-found: error
  pypi_publish:
    needs: goreleaser
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # only trigger when tag starts with v
    steps:    
    - uses: actions/checkout@v3
    - name: Get gobin
      uses: actions/download-artifact@v3
      with:
        name: gobin_${{ github.event.release.tag_name }}
        path: dist/    
    - name: Move file to 
      run: |
        mkdir -p bin
        mv dist/envd_linux_amd64_v1/envd bin/envd
        mv dist/envd-ssh_linux_amd64_v1/envd-ssh bin/envd-ssh
        chmod +x bin/envd
        chmod +x bin/envd-ssh
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build wheel
      run: |      
          ls bin/
          python -m pip install --upgrade pip
          python -m pip install twine wheel auditwheel setuptools_scm
          python setup.py bdist_wheel sdist
          auditwheel repair dist/*.whl
          ls wheelhouse/
          pushd wheelhouse
          for file in *.whl ; do mv $file ${file//"cp39-cp39"/"py2.py3-none"} ; done
          popd
    - name: Upload to Pypi    
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload wheelhouse/*



