name: CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - '**.go'
      - 'Makefile'
      - 'go.**'
  pull_request:
    paths:
      - '.github/workflows/**'
      - '**.go'
      - 'Makefile'
      - 'go.**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.46.2
      - run: echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: Add license
        run: |
          make addlicense && git add pkg cmd &&
          git diff --cached --exit-code || (echo 'Please run "make addlicense" to verify govet' && exit 1);
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.0-beta.3'
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
          RUNNER_TOOL_CACHE: /opt/hostedtoolcache
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}
  test:
    name: test
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      GOPATH: ${{ github.workspace }}/go
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/tensorchord/envd
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/tensorchord/envd
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Verify mockgen
        run: |
          make generate && git add pkg &&
          git diff --cached --exit-code || (echo 'Please run "make generate" to verify generate' && exit 1);
      - name: Test
        run: make test
      - name: send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
          working-directory: ${{ env.GOPATH }}/src/github.com/tensorchord/envd
          flag-name: ${{ matrix.os }}
          parallel: true
  build:
    name: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      GOPATH: ${{ github.workspace }}/go
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/tensorchord/envd
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/tensorchord/envd
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Build
        run: make

  # notifies that all test jobs are finished.
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
