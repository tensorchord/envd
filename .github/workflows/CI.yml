name: CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/CI.yml'
      - '**.go'
      - 'Makefile'
      - 'go.**'
      - 'pkg/**/*.sh'
      - 'pkg/**/*.envd'
  pull_request:
    paths:
      - '.github/workflows/CI.yml'
      - '**.go'
      - 'Makefile'
      - 'go.**'
      - 'pkg/**/*.sh'
      - 'pkg/**/*.envd'
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  typos-check:
    name: Spell Check with Typos
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4
      - name: Check spelling with custom config file
        uses: crate-ci/typos@master
        with:
          config: ./typos.toml
  lint:
    name: lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - uses: actions/checkout@v4
      - name: Add license
        run: |
          make addlicense && git add pkg cmd &&
          git diff --cached --exit-code || (echo 'Please run "make addlicense" to verify govet' && exit 1);
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          args: --timeout=5m
          version: latest
          # Ref https://github.com/golangci/golangci-lint-action/issues/244
          skip-cache: true
  test:
    name: test
    env:
      # Disable telemetry.
      ENVD_ANALYTICS: false
    strategy:
      matrix:
        os: [ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Verify mockgen
        run: |
          make generate && git add pkg &&
          git diff --cached --exit-code || (echo 'Please run "make generate" to verify generate' && exit 1);
      - name: Test
        run: make test
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-out
          path: coverage.out
  e2e-cli:
    name: e2e-cli
    env:
      # Disable telemetry.
      ENVD_ANALYTICS: false
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: e2e test
        run: make e2e-cli-test
        env:
          GIT_LATEST_TAG: ${{ steps.get-latest-tag.outputs.tag }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-cli-coverage-out
          path: e2e-cli-coverage.out
  e2e-lang:
    name: e2e-lang
    env:
      # Disable telemetry.
      ENVD_ANALYTICS: false
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: e2e test
        run: make e2e-lang-test
        env:
          GIT_LATEST_TAG: ${{ steps.get-latest-tag.outputs.tag }}
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-lang-coverage-out
          path: e2e-lang-coverage.out
  build:
    name: build
    env:
      # Disable telemetry.
      ENVD_ANALYTICS: false
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build
        run: make

  # notifies that all test jobs are finished.
  report:
    needs:
      - test
      - e2e-cli
      - e2e-lang
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Install bins
        run: |
          go install github.com/mattn/goveralls@latest
      - name: Get coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-out
          path: merge

      - name: Get cli e2e coverage report
        uses: actions/download-artifact@v4
        with:
          name: e2e-cli-coverage-out
          path: merge
      - name: Get language e2e coverage report
        uses: actions/download-artifact@v4
        with:
          name: e2e-lang-coverage-out
          path: merge
      - name: Merge all coverage reports
        uses: cutecutecat/go-cover-merge@v1
        with:
          input_dir: merge
          output_file: final.out
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goveralls -coverprofile=final.out -service=github
